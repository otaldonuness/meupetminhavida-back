{
  "name": "meupetminhavida-back",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "pretest:e2e": "yarn db:test:restart && sleep 15 && yarn prisma:test:deploy",
    "test:e2e": "dotenv -e .env.test -- jest -i --no-cache --watch --config ./tests/e2e/jest-e2e.json",
    "pretest:int": "yarn db:test:restart && sleep 15 && yarn prisma:test:deploy",
    "test:int": "dotenv -e .env.test -- jest -i --no-cache --watch --config ./tests/integration/jest-int.json",
    "test:unit": "jest --no-cache --watch --config ./tests/unit/jest-unit.json",
    "prisma:dev:deploy": "prisma migrate deploy",
    "prisma:dev:seed": "prisma db seed",
    "db:dev:up": "docker compose -f ./docker/docker-compose.dev.yaml up -d dev-db-mysql",
    "db:dev:rm": "docker compose -f ./docker/docker-compose.dev.yaml rm -s -f -v dev-db-mysql",
    "db:dev:restart": "yarn db:dev:rm && yarn db:dev:up && sleep 15 && yarn prisma:dev:deploy && yarn prisma:dev:seed",
    "prisma:test:deploy": "dotenv -e .env.test -- prisma migrate deploy",
    "db:test:up": "docker compose -f ./docker/docker-compose.test.yaml up -d test-db-mysql",
    "db:test:rm": "docker compose -f ./docker/docker-compose.test.yaml rm -s -f -v test-db-mysql",
    "db:test:restart": "yarn db:test:rm && yarn db:test:up",
    "lint": "eslint \"{src,apps,libs,tests}/**/*.ts\" --fix",
    "format": "prettier --write \"src/**/*.ts\" \"tests/**/*.ts\"",
    "lint-staged": "lint-staged",
    "prepare": "yarn husky install",
    "commit": "git-cz",
    "release": "semantic-release"
  },
  "prisma": {
    "seed": "ts-node prisma/seed.ts"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:otaldonuness/meupetminhavida-back.git"
  },
  "git": {
    "pre-commit": "lint-staged"
  },
  "lint-staged": {
    "*": "prettier --write --ignore-unknown"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "dependencies": {
    "@nestjs/common": "10.1.3",
    "@nestjs/config": "3.0.0",
    "@nestjs/core": "10.1.3",
    "@nestjs/jwt": "10.1.0",
    "@nestjs/passport": "10.0.0",
    "@nestjs/platform-express": "10.1.3",
    "@nestjs/swagger": "7.1.6",
    "@prisma/client": "4.16.2",
    "argon2": "0.30.3",
    "class-transformer": "0.5.1",
    "class-validator": "0.14.0",
    "passport": "0.6.0",
    "passport-jwt": "4.0.1",
    "prisma": "4.16.2",
    "reflect-metadata": "0.1.13",
    "rxjs": "7.8.1"
  },
  "devDependencies": {
    "@commitlint/cli": "^17.6.5",
    "@commitlint/config-conventional": "^17.6.5",
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@types/express": "^4.17.13",
    "@types/jest": "29.5.3",
    "@types/node": "18.17.1",
    "@types/passport-jwt": "^3.0.8",
    "@types/supertest": "^2.0.11",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "commitizen": "^4.3.0",
    "conventional-changelog-conventionalcommits": "^6.1.0",
    "cz-conventional-changelog": "^3.3.0",
    "dotenv-cli": "^7.2.1",
    "eslint": "^8.45.0",
    "eslint-config-prettier": "8.9.0",
    "eslint-plugin-prettier": "^5.0.0",
    "eslint-watch": "^8.0.0",
    "husky": "^8.0.3",
    "jest": "29.6.2",
    "lint-staged": "^13.2.2",
    "pactum": "^3.4.1",
    "prettier": "3.0.0",
    "semantic-release": "^21.0.5",
    "source-map-support": "^0.5.20",
    "supertest": "^6.1.3",
    "ts-jest": "29.1.1",
    "ts-loader": "^9.2.3",
    "ts-node": "^10.0.0",
    "tsconfig-paths": "4.2.0",
    "typescript": "^5.0.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
