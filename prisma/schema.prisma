generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Users {
  id           Int       @id @default(autoincrement())
  role         String    @db.VarChar(10)
  location     Locations @relation(fields: [locationId], references: [id])
  locationId   Int
  firstName    String    @db.VarChar(25)
  lastName     String    @db.VarChar(100)
  email        String    @unique @db.VarChar(50)
  password     String    @db.VarChar(512)
  mobileNumber String?   @db.VarChar(11)
  description  String?   @db.VarChar(200)
  hashRT       String?   @db.VarChar(255)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([locationId])
}

model Pets {
  id              Int               @id @default(autoincrement())
  location        Locations         @relation(fields: [locationId], references: [id])
  locationId      Int
  species         Species           @relation(fields: [speciesId], references: [id])
  speciesId       Int
  name            String            @db.VarChar(40)
  gender          String            @db.Char(1)
  breed           String            @db.VarChar(50)
  isCastrated     Boolean
  age             Int
  description     String            @db.VarChar(100)
  treatments      Treatments[]
  appliedVaccines AppliedVaccines[]
  petPhotos       PetPhotos[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([locationId])
  @@index([speciesId])
}

model Locations {
  id    Int    @id @default(autoincrement())
  city  String @db.VarChar(50)
  state String @db.VarChar(2)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Users Users[]
  Pets  Pets[]
}

model Species {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(40)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Pets      Pets[]
}

model PetPhotos {
  id            Int     @id @default(autoincrement())
  photoURL      String  @db.VarChar(300)
  isMainPicture Boolean
  pet           Pets    @relation(fields: [petId], references: [id])
  petId         Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([petId])
}

model Treatments {
  id          Int      @id @default(autoincrement())
  pet         Pets     @relation(fields: [petId], references: [id])
  petId       Int      @unique
  name        String   @db.VarChar(40)
  medication  String?  @db.VarChar(80)
  description String   @db.VarChar(500)
  date        DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([petId])
}

model Vaccines {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(50)
  whenToTake      String            @db.VarChar(30)
  appliedVaccines AppliedVaccines[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AppliedVaccines {
  id        Int      @id @default(autoincrement())
  date      DateTime
  pet       Pets     @relation(fields: [petId], references: [id])
  vaccine   Vaccines @relation(fields: [vaccineId], references: [id])
  petId     Int      @unique
  vaccineId Int      @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([petId, vaccineId])
}
