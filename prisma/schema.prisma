generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Users {
  id                 String    @id @default(uuid())
  role               UsersRole @default(REGULAR)
  firstName          String    @db.VarChar(25)
  lastName           String    @db.VarChar(100)
  email              String    @unique @db.VarChar(50)
  hashedRefreshToken String?
  hashedPassword     String
  mobileNumber       String?   @db.VarChar(11)
  description        String?   @db.VarChar(200)
  location           Locations @relation(fields: [locationId], references: [id])
  locationId         String

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  bannedAt  DateTime?

  @@index([locationId])
}

model Pets {
  id              String            @id @default(uuid())
  location        Locations         @relation(fields: [locationId], references: [id])
  locationId      String
  species         Species           @relation(fields: [speciesId], references: [id])
  speciesId       String
  name            String            @db.VarChar(40)
  gender          String            @db.Char(1)
  breed           String            @db.VarChar(50)
  isCastrated     Boolean
  age             Int
  description     String            @db.VarChar(100)
  treatments      Treatments[]
  appliedVaccines AppliedVaccines[]
  petPhotos       PetPhotos[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([locationId])
  @@index([speciesId])
}

model Locations {
  id    String @id @default(uuid())
  city  String @db.VarChar(50)
  state String @db.VarChar(2)  

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Users Users[]
  Pets  Pets[]
}

model Species {
  id   String @id @default(uuid())
  name String @db.VarChar(40)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Pets      Pets[]
}

model PetPhotos {
  id            String  @id @default(uuid())
  photoURL      String  @db.VarChar(300)
  isMainPicture Boolean
  pet           Pets    @relation(fields: [petId], references: [id])
  petId         String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([petId])
}

model Treatments {
  id          String   @id @default(uuid())
  pet         Pets     @relation(fields: [petId], references: [id])
  petId       String   @unique
  name        String   @db.VarChar(40)
  medication  String?  @db.VarChar(80)
  description String   @db.VarChar(500)
  date        DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([petId])
}

model Vaccines {
  id              String            @id @default(uuid())
  name            String            @db.VarChar(50)
  whenToTake      String            @db.VarChar(30)
  appliedVaccines AppliedVaccines[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AppliedVaccines {
  id        String   @id @default(uuid())
  date      DateTime
  pet       Pets     @relation(fields: [petId], references: [id])
  vaccine   Vaccines @relation(fields: [vaccineId], references: [id])
  petId     String   @unique
  vaccineId String   @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([petId, vaccineId])
}

enum UsersRole {
  ONG
  ADMIN
  REGULAR
}
